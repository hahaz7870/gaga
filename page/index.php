<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Montserrat:wght@300;400;600&family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap" rel="stylesheet">
    <title>Главная</title>

<style>
<?php style() ?>
main{
    border-bottom: 1px solid #7C7B7B;
}

.main-container-left{
    margin: 45px 0 0 90px;
}

.main-Introduction{
    font-family: 'Montserrat', sans-serif;
    font-weight: lighter;
    font-size: 32px;
    color: #171717;
}

.main-name{
    font-family: 'Inter', sans-serif;
    font-weight: bold;
    font-size: 96px;
    color: #333366;
}

.about-us{
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    font-size: 48px;
    color: #333366;
}

.au-text{
    font-family: 'Montserrat', sans-serif;
    font-size: 36px;
    color: #171717;
    width: 65%;
}

.au-text-right{
    margin-left: 15%;
    width: 81%;
    font-family: 'Montserrat', sans-serif;
    font-size: 36px;
    color: #171717;
}

.about-us-right{
    text-align: right;
    margin: 30px 90px 0 0;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    font-size: 48px;
    color: #333366;
}



.button-container{
   display: flex;
   justify-content: center;
   padding: 60px;
}

.button-bottom{
    width: 460px;
    height: 80px;
    font-size: 36px;
    font-family: 'Inter', sans-serif;
    font-weight: bold;
    color: #ffffff;
    background-color: #4848EB;
    border: 0;
    transition: 1s;
    cursor: pointer;
}

.button-bottom:hover{
    transform: scale(1.2);
    transition: 1s;
    background-color: #2323f5;
    
    
}

footer{
    display: inline-flex;
    position: relative;
}

.left-block {
    width: 430px;
    border-right: 1px solid #7C7B7B ;
    overflow-y: auto; 
    scrollbar-width: thin; /* For Firefox */
    scrollbar-color: transparent transparent; /* For Firefox */
    position: sticky;
    top: 0;
    width: 25%;
    height: 100vh;
}

.right-block {
    background-color: #ffffff;
    flex: 1;
    margin: 0 0 0 50px;
}

.right-block h1{
    color: #000000;
    font-size: 64px;
    font-family: 'Inter', sans-serif;
    font-weight: 400;
    padding: 50px 0 20px 0;
}

.right-block p{
    font-family: 'Montserrat', sans-serif;
    color: #000000;
    font-size: 32px;
    font-weight: 400;
    padding: 0 0 20px 0;
}

.left-block{
    font-family: 'Inter', sans-serif;
}

.left-block h3{
    font-size: 24px;
    color: #333366;
    margin: 40px 0 0 20px;
}

.left-block a{
    display: block;
    font-size: 24px;
    color: #000000;
    margin: 20px 0 0 50px;
    text-decoration: none;
}

summary{
    font-size: 24px;
    color: #000000;
    margin: 20px 0 0 20px;
    cursor: pointer;
}

.left-block li{
    font-size: 24px;
    color: #000000;
    margin: 20px 0 0 50px;
}

.right-block li{
    font-size: 32px;
    font-family: 'Montserrat', sans-serif;
}

.left-block .toggle-content.active {
    color: red; /* Цвет выбранной ссылки */
}

.css.content {
    display: none; /* Скрыть блок с классом css content по умолчанию */
}

.js.content {
    display: none; /* Скрыть блок с классом css content по умолчанию */
}

.How_web-site.content{
    display: none;
}

.Public-site.content{
    display: none;
}

.start-work.content{
    display: none;
}

.meta.content{
    display: none;
}

.edit-basic.content{
    display: none;
}

.frame-web.content{
    display: none;
}

pre{
  background-color: #8c8c8c;
  color: white;
  border: 1px solid transparent;
  margin: 1rem 0 2rem;
  padding: 1rem 2.5rem 1rem 1rem;
  width: 60%;
}



@media (orientation: portrait) {
    main {
            border-bottom: 1px solid #7C7B7B;
        }

        .main-container-left {
            margin: 45px 0 0 10px;
        }

        .main-Introduction {
            font-family: 'Montserrat', sans-serif;
            font-weight: lighter;
            font-size: 24px;
            color: #171717;
        }

        .main-name {
            font-family: 'Inter', sans-serif;
            font-weight: bold;
            font-size: 48px;
            color: #333366;
        }

        .about-us,
        .about-us-right {
            font-size: 25px;
        }

        .au-text,
        .au-text-right {
            font-size: 15px;
        }

        .main-container-right {
            margin: 30px 0 0 10px;
        }

        .button-container {
            display: flex;
            justify-content: center;
            padding: 30px;
        }

        .button-bottom {
            width: 280px;
            height: 60px;
            font-size: 24px;
        }

        .footer-container {
            flex-direction: column;
        }
        .left-block{
            margin: 0;
            width: 40%;
        }

        .right-block {
            margin: 0;
            width: 100%;
            border: none;
        }

        .right-block {
            margin: 0;
        }

        .left-block a,
        .left-block h3,
        summary,
        .left-block li {
            font-size: 10px;
            margin: 15px 0 0 20px;
        }
        .right-block li{
            font-size: 10px;
        }
        pre{
            font-size: 10px;
            width: 100%;
            padding: 5px;
        }
        .HTML.content,
        .css.content,
        .js.content,
        .How_web-site.content,
        .Public-site.content,
        .start-work.content,
        .meta.content,
        .edit-basic.content,
        .frame-web.content
        {
            padding: 20px;
        }

        .right-block h1{
    color: #000000;
    font-size: 20px;
    font-family: 'Inter', sans-serif;
    font-weight: 400;
    padding: 20px 0 20px 0;
}

.right-block p{
    font-family: 'Montserrat', sans-serif;
    color: #000000;
    font-size: 10px;
    font-weight: 400;
    

}




}
</style>


</head>
<body>

<?php menu(); 
 MessageShow(); 
 ?>

<main>
        <div class="main-container-left">
            <p class="main-Introduction">Добро пожаловать на</p>
            <h1 class="main-name" >web-platform</h1>
            <h1 class="about-us">О нас:</h1>
            <p class="au-text">web-platform - это виртуальное сообщество, созданное для того, чтобы поддержать вас на каждом этапе вашего веб-развития. Наши основные цели - обучение и поддержка. Мы предлагаем платформу, где вы можете делиться своими знаниями и опытом, публиковать статьи, обсуждать новые технологии и находить ответы на ваши вопросы.</p>
        </div>
        <div class="main-container-right">
            <h1 class="about-us-right">Что мы предлагаем:</h1>
            <ol class="au-text-right">
                <li>Статьи и Руководства: На web-platform публикуйте свои статьи о веб-разработке, независимо от опыта. Ваше мнение важно для нас и наших пользователей.</li>
                <li>Обучение: Исследуйте разнообразные материалы: от HTML и CSS до JavaScript и фреймворков. У нас есть всё для обучения веб-разработке.</li>
                <li>Форум и Обсуждения: Присоединяйтесь к нашему форуму, где можно обсудить последние тренды в веб-разработке, получить обратную связь от сообщества или просто поделиться своими мыслями.</li>
                <li>Совместные Проекты: На web-platform находите партнеров, расширяйте сеть и участвуйте в совместных проектах и инициативах.</li>
            </ol>
        </div>
        <div class="button-container">
        <a href="/register" ><button class="button-bottom">Зарегистрироваться</button></a>
        </div>

    </main>

    <footer>
            <div class="left-block">
                <div class="left-block-container">
                <h3>Начало веб-программирования</h3>
                <a href=""data-toggle="HTML" class="toggle-content" >Основы HTML</a>
                <a href="#"data-toggle="css" class="toggle-content">Основы CSS</a>
                <a href=""data-toggle="js" class="toggle-content">Основы JavaScript</a>
                <a href="" data-toggle="How_web-site" class="toggle-content">Каким должен быть ваш веб-сайт?</a>
                <a href="" data-toggle="Public-site" class="toggle-content">Публикация веб-сайта</a>

                <h3>HTML - структура сайта</h3>
                <a href="" data-toggle="start-work" class="toggle-content">Начало работы с HTML</a>
                <a href="" data-toggle="meta" class="toggle-content">Метаданные в HTML</a>
                <a href="" data-toggle="edit-basic" class="toggle-content">Основы редактирования текста в HTML</a>
                <a href="" data-toggle="frame-web" class="toggle-content">Структура документа и веб-сайта</a>
                <h3>CSS - стилизирование сайта</h3>
                <details>
                <summary>Введение в CSS</summary>
                <a href="">Что такое CSS?</a>
                <a href="">Как работает CSS</a>
            </details>
            <details>
                <summary>Устройство CSS</summary>
                <a href="">Псевдоклассы, псевдоэлементы</a>
                <a href=""></a>
            </details>
            <details>
                <summary>Стилизирование текста</summary>
                <a href="">Стилизация текста</a>
                <a href="">Основы стилизирования текста и шрифта</a>
            </details>
            <details>
                <summary>CSS макет</summary>
                <a href="">Введение в CSS вёрстку</a>
                <a href="">CSS layout</a>
            </details>
                </div>
            </div>
            
            <div class="right-block">
                <div class="HTML content">
                <h1 class="h1-text">Основы HTML</h1>
                <p>HTML (Hypertext Markup Language) - это код, который используется для структурирования и отображения веб-страницы и её контента. Например, контент может быть структурирован внутри множества параграфов, маркированных списков или с использованием изображений и таблиц данных. Как видно из названия, эта статья даст вам базовое понимание HTML и его функций.</p>
                <h1>Что такое HTML на самом деле?</h1>
                <p>HTML не является языком программирования; это язык разметки, и используется, чтобы сообщать вашему браузеру, как отображать веб-страницы, которые вы посещаете. Он может быть сложным или простым, в зависимости от того, как хочет веб-дизайнер. HTML состоит из ряда элементов, которые вы используете, чтобы вкладывать или оборачивать различные части контента, чтобы заставить контент отображаться или действовать определённым образом. Ограждающие теги могут сделать слово или изображение ссылкой на что-то ещё, могут сделать слова курсивом, сделать шрифт больше или меньше и так далее. Например, возьмём следующую строку контента:</p>
                <pre>Моя кошка очень раздражена</pre>
                <p>Если бы мы хотели, чтобы строка стояла сама по себе, мы могли бы указать, что это абзац, заключая его в теги абзаца:</p>
                <pre>&lt;p&gt;Моя кошка очень раздражена&lt;/p&gt;</pre>
                <h1>Анатомия HTML элемента</h1>
                <p>Главными частями нашего элемента являются:</p>
                <ol>
                    <li>Открывающий тег (Opening tag): Состоит из имени элемента (в данном случае, "p"), заключённого в открывающие и закрывающие угловые скобки. Открывающий тег указывает, где элемент начинается или начинает действовать, в данном случае — где начинается абзац.</li>
                    <br>
                    <li>Закрывающий тег (Closing tag): Это то же самое, что и открывающий тег, за исключением того, что он включает в себя косую черту перед именем элемента. Закрывающий элемент указывает, где элемент заканчивается, в данном случае — где заканчивается абзац. Отсутствие закрывающего тега является одной из наиболее распространённых ошибок начинающих и может приводить к странным результатам.</li>
                    <br>
                    <li>Контент (Content): Это контент элемента, который в данном случае является просто текстом.</li>
                    <br>
                    <li>Элемент(Element): Открывающий тег, закрывающий тег и контент вместе составляют элемент.</li>
                </ol>
            </div>

                <div class="css content">
                    <h1>Основы Css</h1>
                    <p>CSS (Cascading Style Sheets) — это код, который вы используете для стилизации вашей веб-страницы. Основы CSS помогут вам понять, что вам нужно для начала работы. Мы ответим на такие вопросы как: Как сделать мой текст черным или красным? Как сделать так, чтобы контент появлялся в определённом месте на экране? Как украсить мою веб-страницу с помощью фоновых изображений и цветов?</p>
                    <h1>Так что же такое CSS?</h1>
                    <p>Как и HTML, CSS на самом деле не является языком программирования. Это не язык разметки - это язык таблицы стилей. Это означает, что он позволяет применять стили выборочно к элементам в документах HTML.</p>
                    </div>

                    <div class="js content">
                        <h1>Основы JavaScript</h1>
                        <p>JavaScript – это язык программирования, который добавляет интерактивность на ваш веб-сайт (например: игры, отклик при нажатии кнопок или при вводе данных в формы, динамические стили, анимация). Эта статья поможет вам начать работать с этим захватывающим языком и даст вам представление о том, на что он способен..</p>
                        <h1>Что такое JavaScript на самом деле?</h1>
                        <p>JavaScript ("JS" для краткости) — это полноценный динамический язык программирования, который применяется к HTML документу, и может обеспечить динамическую интерактивность на веб-сайтах. Его разработал Brendan Eich, сооснователь проекта Mozilla, Mozilla Foundation и Mozilla Corporation.

                            JavaScript невероятно универсален и дружелюбен к новичкам. Обладая большим опытом, вы сможете создавать игры, анимированную 2D и 3D графику, полномасштабные приложения с базами данных и многое другое!
                            
                            JavaScript сам по себе довольно компактный, но очень гибкий. Разработчиками написано большое количество инструментов поверх основного языка JavaScript, которые разблокируют огромное количество дополнительных функций с очень небольшим усилием.</p>
                        </div>  

                        <div class="How_web-site content">
                        <h1>Каким должен быть ваш веб-сайт?</h1>
                        <h1>1.Планирование</h1>
                        <p>Перед тем как делать что-то, вам нужны идеи. Что ваш веб-сайт должен фактически делать? По существу, ваш веб-сайт может делать все, что угодно, но для вашей первой попытки, вы должны придерживаться простых вещей. Мы начнём с создания простой веб-страницы, содержащую заголовок, изображение и несколько абзацев.</p>
                        <p>Для начала, вам будет нужно ответить на следующие вопросы:</p>
                        <p>1. О чем ваш веб-сайт?</p>
                        <p>2. Какую информацию вы предоставляете о предмете? </p>
                        <p>3. Как будет выглядеть ваш веб-сайт?</p>
                        <h1>2. Сделайте набросок вашего дизайна</h1>
                        <p>Теперь возьмите ручку и бумагу и сделайте примерный набросок того, как вы хотите, чтобы выглядел ваш сайт. Для вашей первой веб-страницы должен получиться небольшой набросок, и вы должны взять это в привычку. Это действительно помогает, и вам не нужно быть Ван Гогом!</p>
                        </div>

                        <div class="Public-site content">
                        <h1>Публикация вашего веб-сайта</h1>
                        <p>После того, как вы закончите писать код и организовывать файлы, которые составляют ваш веб-сайт, вам нужно расположить все это в Интернете, чтобы люди могли найти ваш сайт. В этой статье описывается, как разместить простой пример вашего кода с минимальными усилиями.</p>
                        <h1>Какие существуют варианты?</h1>
                        <p>Публикация веб-сайта это не простая тема, главным образом, потому что существует много различных способов сделать это. В этой статье мы не стремимся документировать все возможные методы. Скорее, мы обсудим плюсы и минусы трёх обширных стратегий с точки зрения новичка, а затем вы пройдёте через один метод, который будет работать в настоящее время.</p>
                        <h1>Получение хостинга и доменного имени</h1>
                        <p>Чтобы иметь больший контроль над контентом и внешним видом веб-сайта, большинство людей предпочитают покупать веб-хостинг и доменное имя:</p>
                        <ul>
                            <li>Хостинг — арендованное файловое пространство на веб-сервере хостинговой компании. Вы размещаете ваши файлы веб-сайта в этом пространстве, и веб-сервер выдаёт контент для веб-пользователей, которые запрашивают его.</li>
                            <br>
                            <li>Доменное имя — уникальный адрес по которому люди могут найти ваш веб-сайт, например http://www.mozilla.org или http://www.bbc.co.uk. Вы можете арендовать доменное имя на столько лет, сколько захотите (минимум на 1 год) у регистратора доменов.</li>
                        </ul>
                        <p>Множество профессиональных веб-сайтов располагается в Интернете именно таким образом.</p>
                        <p>Кроме того, вам потребуется File Transfer Protocol (FTP)-клиент, чтобы передать файлы веб-сайта на сервер. Существует множество FTP-клиентов, но, как правило, вам нужно войти на веб-сервер, используя данные, предоставленные вашей хостинговой компанией (например: имя пользователя (логин), пароль, имя хоста). Затем FTP-клиент отобразит файлы на вашем компьютере в одной половине окна и файлы на хостинговом сервере в другой половине, так вы сможете перетаскивая копировать файлы с вашего компьютера на сервер и обратно.</p>
                    
                    </div>

                    <div class="start-work content">
                        <h1>Начало работы с HTML</h1>
                        <p>В этой статье мы охватим азы HTML, необходимые для начала работы. Дадим определение «элементам», «атрибутам», «тегам» и прочим важным понятиям, о которых вы, возможно, слышали, а также об их роли в языке. Мы также покажем, как устроены HTML-элементы, типичная HTML-страница, и объясним другие важные аспекты языка. По ходу дела, чтобы вы не заскучали, мы поиграем с настоящей HTML-страницей!</p>
                        <h1>Что такое HTML?</h1>
                        <P>HTML (HyperText Markup Language - язык гипертекстовой разметки) не является языком программирования; это язык разметки, используемый для определения структуры веб-страниц, посещаемых пользователями. Они могут иметь сложную или простую структуру, всё зависит от замысла и желания веб-разработчика. HTML состоит из ряда элементов, которые вы используете для того, чтобы охватить, обернуть или разметить различные части содержимого, чтобы оно имело определённый вид или срабатывало определённым способом. Встроенные тэги могут преобразовать часть содержимого в гиперссылку, по которой можно перейти на другую веб-страницу, выделить курсивом слова и так далее. Например, рассмотрим следующую строку:</P>
                        <pre>Мой кот очень сердитый</pre>
                        <p>Если мы хотим, чтобы строка отобразилась в таком же виде, мы можем определить её, как "параграф", заключив её в теги элемента "параграф" (&lt;p&gt;), например:</p>
                            <pre>&lt;p&gt;Мой кот очень сердитый&lt;/p&gt;</pre>

                    </div>

                    <div class="meta content">
                    <h1>Метаданные в HTML</h1>
                    <p>Элемент head HTML-документа не отображается на странице в веб-браузере. Он содержит такую информацию, как:</p>
                    <ul>
                        <li>заголовок (title) страницы</li>
                        <br>
                        <li>ссылки на файлы CSS (если вы хотите применить к вашему HTML стили CSS)</li>
                        <br>
                        <li>ссылки на иконки</li>
                        <br>
                        <li>другие метаданные (данные о HTML: автор и важные ключевые слова, описывающие документ.)</li>
                    </ul>
                        <p>В этой статье мы рассмотрим всё вышеперечисленное и многое другое, чтобы дать вам хорошую основу для работы с разметкой.</p>
                        <h1>Что такое &lt;head&gt;?</h1>
                        <p>Давайте снова посмотрим на HTML-документ:</p>
                        <pre>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;Моя страница&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;Текст&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</pre>

                    <p>Содержимое &lt;head&gt;, в отличие от содержимого элемента &lt;body&gt;, не отображается на странице. Задача &lt;head&gt; — хранить метаданные документа. В приведённом выше примере &lt;head&gt; совсем небольшой:</p>
                    <pre>
&lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;Моя страница&lt;/title&gt;
&lt;/head&gt;
                    </pre>
                    <p>Однако на больших страницах блок <head> может быть довольно объёмным. Попробуйте зайти на какие-нибудь из ваших любимых сайтов и посмотреть содержимое <head> с помощью инструментов разработчика. Наша цель сейчас — не в том, чтобы показать вам, как использовать всё, что только можно добавить в head, а дать представление и научить вас, как использовать основные элементы. Давайте начнём.</p>
                    <h1>Название страницы (title)</h1>
                    <p>Мы уже видели, как работает элемент &lt;title&gt;: его используют для добавления заголовка (названия страницы) в документ. Элемент &lt;h1&gt; (en-US) тоже иногда называют заголовком страницы. Но это разные вещи!</p>
                    <ul>
                        <li>Элемент &lt;head&gt; виден на странице, открытой в браузере, — его используют один раз на странице, чтобы выделить название содержимого. Это может быть название истории, заголовок новости или что-то в этом роде.</li>
                        <br>
                        <li>Элемент &lt;title&gt; — метаданные, название всего HTML-документа, а не заголовок внутри его содержимого.</li>
                    </ul>    
                </div>

                <div class="edit-basic content">
                        <h1>Основы редактирования текста в HTML</h1>
                        <p>Одна из основных задач HTML — придавать тексту структуру и смысл, семантику, так, чтобы браузер смог отобразить текст корректно. Эта статья покажет, как можно использовать HTML, чтобы упорядочить текст на странице путём добавления заголовков и абзацев, выделения слов, создания списков и многое другое.</p>
                        <h1>Основы: Заголовки и абзацы / параграфы</h1>
                        <p>Большинство структурированных текстов состоят из параграфов и заголовков, независимо от того, читаете ли вы рассказ, или газету, или учебник, журнал и т.д. Упорядоченный контент делает чтение более лёгким и приятным.</p>
                        <p>В HTML каждый абзац заключён в элемент &lt;p&gt;, подобно:</p>
                        <pre>&lt;p&gt;Я параграф, да, это я.&lt;/p&gt;</pre>
                        <p>Каждый заголовок заключён в элемент заголовка &lt;h1&gt;:</p>
                        <pre>&lt;h1&gt;Я заголовок истории.&lt;/h1&gt;</pre>
                        <p>Имеется шесть элементов заголовка: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt; и &lt;h6&gt;. Каждый элемент представляет разный уровень контента в документе; &lt;h1&gt; представляет главный заголовок, &lt;h2&gt; представляет подзаголовки, &lt;h3&gt; представляет под-подзаголовки и так далее.</p>
                        <h1>Создание иерархической структуры</h1>
                        <p>Например, в рассказе &lt;h1&gt; будет представлять заглавие рассказа, &lt;h2&gt; обозначит название каждой главы, &lt;h3&gt; будет обозначать подзаголовки в каждой главе и так далее.</p>
                        <pre>
&lt;h1&gt;Сокрушительная скука&lt;/h1&gt;

&lt;p&gt;Крис Миллс&lt;/p&gt;

&lt;h2&gt;Глава 1: Тёмная ночь&lt;/h2&gt;

&lt;p&gt;Это была тёмная ночь. Где-то кричала сова. Дождь обрушился на ...&lt;/p&gt;

&lt;h2&gt;Глава 2: Вечное молчание&lt;/h2&gt;

&lt;p&gt;Наш главный герой ничего не мог, когда шёпот из тёмной фигуры ...&lt;/p&gt;

&lt;h3&gt;Призрак говорит&lt;/h3&gt;

&lt;p&gt;
  Прошло ещё несколько часов, когда внезапно призрак выпрямился и воскликнул:
  «Пожалуйста, помилуй мою душу!»
&lt;/p&gt;

                        </pre>
                        <p>Всё это действительно зависит от вас — что именно будут представлять собой элементы, пока существует иерархия. Вам просто нужно иметь в виду несколько хороших правил при создании таких структур.</p>
                        <ul>
                        <li>Предпочтительнее использовать &lt;h1&gt; только один раз на странице — это заголовок самого верхнего уровня, и все остальные заголовки располагаются ниже его в иерархии.</li>
                        <br>
                        <li>Убедитесь, что вы используете заголовки в правильном порядке в иерархии. Не используйте &lt;h3&gt; для создания подзаголовков при одновременном использовании &lt;h2&gt; для представления под-подзаголовков — это не имеет смысла и приведёт к странным результатам.</li>
                        <br>
                        <li>Из шести доступных уровней заголовка вы должны стремиться использовать не более трёх на странице, если только вы не чувствуете, что это необходимо. Документы с большим количеством уровней (то есть с глубокой иерархией) становятся громоздкими и трудными для навигации. В таких случаях рекомендуется распределять контент по нескольким страницам, если это возможно.</li>
                    </ul>
                    </div>

                    <div class="frame-web content">
                        <h1>Структура документа и веб-сайта</h1>
                        <p>В дополнение к определению отдельных частей вашей страницы (таких как «абзац» или «изображение»), HTML также содержит ряд элементов блочного уровня, используемых для определения областей вашего веб-сайта (такие как «заголовок», «навигационное меню», «колонка основного содержимого»). В этой статье рассматривается, как планировать базовую структуру сайта и писать HTML для представления этой структуры.</p>
                        <h1>Основные составляющие документа</h1>
                        <p>Веб-страницы могут и будут отличаться друг от друга, но все они, преимущественно, состоят из аналогичных стандартных компонентов, если только страница не отображает полноэкранное видео или игру, не является частью какого-либо художественного проекта или просто плохо структурирована:</p>
                        <p><b>Заголовок (колонтитул).</b> Обычно это большая полоса вверху страницы, с крупным заголовком и / или логотипом. Здесь указывается общая информация о веб-сайте, не меняющаяся от страницы к странице.</p>
                        <p><b>Навигационное меню.</b> Ссылки на основные разделы сайта; обычно в виде кнопок, ссылок или вкладок. Также как и заголовок, навигация остаётся неизменной на всех страницах сайта — наличие непоследовательной навигации на вашем сайте запутает и разочарует пользователей. Многие веб-дизайнеры считают панель навигации частью заголовка, а не отдельным компонентом, но это не является обязательным требованием; на самом деле, некоторые также утверждают, что их разделение на отдельные компоненты улучшает доступность, поскольку раздельная структура будет понятнее для людей, пользующихся считывателями экрана.</p>
                        <p><b>Основное содержимое.</b> Большая область в центре страницы, содержащая, в основном, уникальный контент данной веб-страницы, например видео, которое вы хотите посмотреть, или рассказ, который вы читаете, или карту, которую вы хотите просмотреть, или заголовки новостей и т. д. Это одна из частей сайта, которая определённо будет меняться от страницы к странице!</p>
                        <p><b>Боковая панель.</b> Как правило, содержит некоторую второстепенную информацию, ссылки, цитаты, рекламу и т.д. Обычно она относится к содержимому в основном контенте (например, на странице со статьёй, боковая панель может содержать биографию автора или ссылки на связанные статьи), но в некоторых случаях здесь размещают и другие элементы, например, вторичную навигационную систему.</p>
                        <p><b>Нижний колонтитул (футер).</b> Полоса в нижней части страницы, которая обычно содержит уведомления об авторских правах или контактную информацию. Это место для размещения общей информации (например, заголовка), но обычно эта информация не является критичной или вторична для самого веб-сайта. Нижний колонтитул также иногда используется для SEO целей, предоставляя ссылки для быстрого доступа к популярному контенту.</p>
                        <h1>HTML для структурирования содержимого</h1>
                        <p>Пример, показанный сверху, не красив и примитивен, но идеально подходит для иллюстрирования типичного макета веб-сайта. У некоторых веб-сайтов больше колонок, некоторые — более сложные, но идею вы поняли. С правильным CSS вы могли бы использовать практически любые элементы для обёртывания различных разделов и стилизовать их так, как вам хочется, но, как обсуждалось ранее, нам нужно уважать семантику и использовать правильный элемент для правильной работы.</p>
                        <p>Это потому, что визуальные эффекты — это ещё не самое главное. Мы используем цвет и размер шрифта для привлечения внимания посетителей к наиболее полезным частям содержимого, такого как навигационное меню или связанные ссылки, но что насчёт людей со слабым зрением, к примеру, для которых концепция "розового" и "большого шрифта" не будет полезной?</p>
                        <p>В своём HTML-коде вы можете размечать разделы содержимого сайта на основе их функциональности — использовать элементы, которые представляют разделы контента, описанные выше, а вспомогательные технологии, такие как программы чтения с экрана, смогут распознавать эти элементы и помогать в таких задачах, как "найти основную навигацию" или "найти основное содержимое". </p>
                        <p>Для реализации такой семантической разметки HTML предоставляет выделенные теги, которые можно использовать для создания таких разделов, например:</p>
                        <ul>
                            <li>Заголовок: &lt;header&gt;.</li>
                            <li>Навигационное меню: &lt;nav&gt;.</li>
                            <li>Основное содержимое: &lt;main&gt;, с различными подразделами содержимого, представленными элементами &lt;article&gt;, &lt;section&gt; и &lt;div&gt;.</li>
                            <li>Боковая панель: &lt;aside&gt;, обычно располагается внутри &lt;main&gt;.</li>
                            <li>Нижний колонтитул: &lt;footer&gt;.</li>
                        </ul>
                        <h1>Активное обучение: исследование кода для нашего примера</h1>
                        <p>Наш пример, представленный выше, содержит следующий код. Мы хотели бы, чтобы вы взглянули на приведённый выше пример, а затем просмотрели код ниже, чтобы узнать, из каких частей он состоит.</p>
                        <pre>
&lt;!doctype html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8" /&gt;

    &lt;title&gt;Заголовок моей страницы&lt;/title&gt;
    &lt;link
      href="https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Sonsie+One"
      rel="stylesheet"
      type="text/css" /&gt;
    &lt;link rel="stylesheet" href="style.css" /&gt;

    &lt;!-- следующие 3 строки нужны для корректного отображения семантических элементов HTML5 
    в старых версиях Internet Explorer--&gt;
    &lt;!--[if lt IE 9]&gt;
      &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;!-- Вот наш главный заголовок, который используется на всех страницах нашего веб-сайта --&gt;

    &lt;header&gt;
      &lt;h1&gt;Заголовок&lt;/h1&gt;
    &lt;/header&gt;

    &lt;nav&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="#"&gt;Домашняя страница&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;Наша команда&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;Проекты&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;Контакты&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;

      &lt;!-- Форма поиска — это ещё один распространённый нелинейный способ навигации по веб-сайту. --&gt;

      &lt;form&gt;
        &lt;input type="search" name="q" placeholder="Search query" /&gt;
        &lt;input type="submit" value="Go!" /&gt;
      &lt;/form&gt;
    &lt;/nav&gt;

    &lt;!-- Здесь основное содержимое нашей страницы --&gt;
    &lt;main&gt;
      &lt;!-- Она содержит статью --&gt;
      &lt;article&gt;
        &lt;h2&gt;Заголовок статьи&lt;/h2&gt;

        &lt;p&gt;
          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Donec a diam
          lectus. Set sit amet ipsum mauris. Maecenas congue ligula as quam
          viverra nec consectetur ant hendrerit. Donec et mollis dolor. Praesent
          et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt
          congue enim, ut porta lorem lacinia consectetur.
        &lt;/p&gt;

        &lt;h3&gt;Подраздел&lt;/h3&gt;

        &lt;p&gt;
          Donec ut librero sed accu vehicula ultricies a non tortor. Lorem ipsum
          dolor sit amet, consectetur adipisicing elit. Aenean ut gravida lorem.
          Ut turpis felis, pulvinar a semper sed, adipiscing id dolor.
        &lt;/p&gt;

        &lt;p&gt;
          Pelientesque auctor nisi id magna consequat sagittis. Curabitur
          dapibus, enim sit amet elit pharetra tincidunt feugiat nist imperdiet.
          Ut convallis libero in urna ultrices accumsan. Donec sed odio eros.
        &lt;/p&gt;

        &lt;h3&gt;Ещё один подраздел&lt;/h3&gt;

        &lt;p&gt;
          Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum
          soclis natoque penatibus et manis dis parturient montes, nascetur
          ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem
          facilisis semper ac in est.
        &lt;/p&gt;

        &lt;p&gt;
          Vivamus fermentum semper porta. Nunc diam velit, adipscing ut
          tristique vitae sagittis vel odio. Maecenas convallis ullamcorper
          ultricied. Curabitur ornare, ligula semper consectetur sagittis, nisi
          diam iaculis velit, is fringille sem nunc vet mi.
        &lt;/p&gt;
      &lt;/article&gt;

      &lt;!-- Дополнительный контент также может быть вложен в основной контент --&gt;
      &lt;aside&gt;
        &lt;h2&gt;Связанные темы&lt;/h2&gt;

        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#"&gt;Мне нравится стоять рядом с берегом моря&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#"&gt;&gt;Мне нравится стоять рядом с морем&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#"&gt;Даже на севере Англии&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#"&gt;Здесь не перестаёт дождь&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#"&gt;Лаааадно...&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/aside&gt;
    &lt;/main&gt;

    &lt;!-- И вот наш главный нижний колонтитул, который используется на всех страницах нашего веб-сайта --&gt;

    &lt;footer&gt;
      &lt;p&gt;©Авторские права никому не принадлежат, 2050. Все права защищены.&lt;/p&gt;
    &lt;/footer&gt;
  &lt;/body&gt;
&lt;/html&gt;

                        </pre>
                        <p>Потратьте некоторое время, чтобы просмотреть код и понять его — комментарии внутри кода также помогут вам в этом. Мы не просим вас делать ничего больше в этом уроке, потому что ключ к пониманию макета документа заключается в написании осмысленной структуры HTML, а затем её развёртывании с помощью CSS. Мы подождём, пока вы не начнёте изучать CSS-макет как часть темы CSS.</p>
                    </div>

            </div>     
    </footer>
    <script>

        // Получаем все ссылки, которые нужно управлять
const toggleLinks = document.querySelectorAll('.toggle-content');

// Первая ссылка по умолчанию будет активной при загрузке страницы
toggleLinks[0].classList.add('active');

// Добавляем обработчик событий на каждую ссылку
toggleLinks.forEach(link => {
    link.addEventListener('click', function(event) {
        event.preventDefault();

        // Убираем класс active у всех ссылок
        toggleLinks.forEach(link => {
            link.classList.remove('active');
        });

        // Добавляем класс active к выбранной ссылке
        this.classList.add('active');

        // Показываем соответствующий контент
        const contentClass = this.getAttribute('data-toggle');
        const contentToShow = document.querySelector(`.${contentClass}.content`);

        // Скрываем все блоки с контентом
        document.querySelectorAll('.content').forEach(content => {
            content.style.display = 'none';
        });

        // Показываем выбранный блок с контентом
        contentToShow.style.display = 'block';
    });
});

// Показываем контент для первой ссылки при загрузке страницы
document.querySelector('.HTML.content').style.display = 'block';
    </script>

</body>
</html>